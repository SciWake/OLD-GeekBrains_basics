'''
Хеш-функции предназначены для "сжатия" произвольного сообщения или набора данных, записанных в двоичном алфавите, в
битовую комбинацию фиксированной длины - свертку.

Сферы применения хэш-функций:
    * Словарь (dict);
    * Множество (set);
    * Построение сисстем контроля целостности данных при передаче или хранении;
    * Аутентификация источника данных.
'''

# Создадим список, в котором будем хранить слова. Небольшой словарь для слов Eng языка.


h_list = [None] * 26


# Самый простой способ определить место слова внутри этого списка - это взять его первую букву. В зависимости от первой
# буквы мы будем помещать слово в соответствующую ячейку
def my_append(value):
    index = ord(value[0]) - ord('a')  # Переменная индекс запоминает в какую ячейку надо поместить число
    h_list[index] = value
    print(h_list)


a = 'apricot'
my_append(a)

b = 'banana'
my_append(b)

a = 'apple'
my_append(a)  # Получаем коллизию


def my_index(value):
    letter = 26
    index = 0
    size = 10000

    for i, char in enumerate(value):
        index += (ord(char) - ord('a') + 1) * letter ** i
    return index % size


print(my_index(a))

print(my_index(b))

print(my_index(a))

# 7025
# 6108
# 7025
