'''
Обзор алгоритма сорировки пузырьком:
    * Сложность: O(n^2) / лучшее время O(n). Лучшее время будет тогда, когда массив уже отсортирован;
    * Устойчивость (стабильность): Устойчивая;
    * Тип (категория): Вставками;
    * Потребление памяти: Не требует дополнительной памяти.

Принцип работы: Из массива последовательно берётся каждый элемент, корме первого (index == 0). Этот элемент вставляется
в отсортированную часть массива. В самом начале сортировки первый элемент массива считается отсортированным.
Далее, мы берём второй элемент и проверям куда его вставить в отсорированную часть, после цепочуи сравнений с
отсорированной частью, она увеличивается на 1 элемент. И таким методом, мы проходимся по всем элементам.
'''

# Генерация массива
import random

size = 10
array = [i for i in range(size)]
random.shuffle(array)
print(array)


def insertion_sort(array):
    for i in range(1, len(array)):
        spam = array[i]
        j = i

        while array[j - 1] > spam and j > 0:
            array[j] = array[j - 1]
            j -= 1

        array[j] = spam


insertion_sort(array)
print(array)
